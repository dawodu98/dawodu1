pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                // Check out the code from your version control system (e.g., Git)
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                // Install virtualenv and create a Python virtual environment
                sh 'python -m venv venv'
                
                // Activate the virtual environment
                sh 'source venv/bin/activate'
                
                // Install dependencies using pip
                sh 'pip install -r requirements.txt'
            }
        }
        
        stage('Test') {
            steps {
                // Run your Python tests (replace 'test.py' with your test script)
                sh 'python test.py'
            }
        }
        
        stage('Cleanup') {
            steps {
                // Deactivate the virtual environment and remove it
                sh 'deactivate'
                sh 'rm -rf venv'
            }
        }
    }
    
    post {
        success {
            // If the build and tests are successful, you can deploy or do further actions here
            echo 'Build and tests passed. Deploying...'
            // Add your deployment steps here
        }
        
        failure {
            // If the build or tests fail, you can take appropriate actions here
            echo 'Build or tests failed. Not deploying.'
            // Add error handling or notifications here
        }
    }
}
